//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/InputSystem/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""KBM"",
            ""id"": ""9800408c-2349-486f-b030-7c3fa9056c52"",
            ""actions"": [
                {
                    ""name"": ""LeftClick"",
                    ""type"": ""Button"",
                    ""id"": ""dd59d81f-4372-46eb-862b-f2f18baff592"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""Button"",
                    ""id"": ""12d65c98-d5fc-4f32-a86a-98137d46d445"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PointerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""38867b15-d1c4-4b20-8729-cbacb7cfc6bb"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""QAttack"",
                    ""type"": ""Button"",
                    ""id"": ""37248390-8d2c-45d9-a1ba-e0d76d0e176c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WAttack"",
                    ""type"": ""Button"",
                    ""id"": ""1fc8a7f5-cb00-4769-9989-6632548d9083"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EAttack"",
                    ""type"": ""Button"",
                    ""id"": ""ee085c73-f3ae-4dea-b6f3-4746d31d6960"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RAttack"",
                    ""type"": ""Button"",
                    ""id"": ""c51276ca-1391-4419-8d7b-8bca88952a3d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""e74cbfc7-4744-442c-b431-1a161708eb69"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""28765f97-bd9a-497f-8b93-bc9ed0d6db26"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""411143ed-9b44-4bb1-bfc7-306a9ab4f4b0"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9eddec17-a352-4c2f-82e9-131c0ec0c1a2"",
                    ""path"": ""<Keyboard>/#(Q)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""990527b9-fdcf-41c2-8955-c07fe50a6bc7"",
                    ""path"": ""<Keyboard>/#(W)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff21f6e4-b8dd-4ad1-b777-3c4146d4aa79"",
                    ""path"": ""<Keyboard>/#(E)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1508828d-3ac6-449f-8f86-5fcba6a4c134"",
                    ""path"": ""<Keyboard>/#(R)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c6fcf1d-16bd-4653-a057-cafb305ce855"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5e267b9-f6a7-4b48-82d9-98e7c7edc0d7"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // KBM
        m_KBM = asset.FindActionMap("KBM", throwIfNotFound: true);
        m_KBM_LeftClick = m_KBM.FindAction("LeftClick", throwIfNotFound: true);
        m_KBM_RightClick = m_KBM.FindAction("RightClick", throwIfNotFound: true);
        m_KBM_PointerPosition = m_KBM.FindAction("PointerPosition", throwIfNotFound: true);
        m_KBM_QAttack = m_KBM.FindAction("QAttack", throwIfNotFound: true);
        m_KBM_WAttack = m_KBM.FindAction("WAttack", throwIfNotFound: true);
        m_KBM_EAttack = m_KBM.FindAction("EAttack", throwIfNotFound: true);
        m_KBM_RAttack = m_KBM.FindAction("RAttack", throwIfNotFound: true);
        m_KBM_Pause = m_KBM.FindAction("Pause", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // KBM
    private readonly InputActionMap m_KBM;
    private IKBMActions m_KBMActionsCallbackInterface;
    private readonly InputAction m_KBM_LeftClick;
    private readonly InputAction m_KBM_RightClick;
    private readonly InputAction m_KBM_PointerPosition;
    private readonly InputAction m_KBM_QAttack;
    private readonly InputAction m_KBM_WAttack;
    private readonly InputAction m_KBM_EAttack;
    private readonly InputAction m_KBM_RAttack;
    private readonly InputAction m_KBM_Pause;
    public struct KBMActions
    {
        private @PlayerInputActions m_Wrapper;
        public KBMActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftClick => m_Wrapper.m_KBM_LeftClick;
        public InputAction @RightClick => m_Wrapper.m_KBM_RightClick;
        public InputAction @PointerPosition => m_Wrapper.m_KBM_PointerPosition;
        public InputAction @QAttack => m_Wrapper.m_KBM_QAttack;
        public InputAction @WAttack => m_Wrapper.m_KBM_WAttack;
        public InputAction @EAttack => m_Wrapper.m_KBM_EAttack;
        public InputAction @RAttack => m_Wrapper.m_KBM_RAttack;
        public InputAction @Pause => m_Wrapper.m_KBM_Pause;
        public InputActionMap Get() { return m_Wrapper.m_KBM; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(KBMActions set) { return set.Get(); }
        public void SetCallbacks(IKBMActions instance)
        {
            if (m_Wrapper.m_KBMActionsCallbackInterface != null)
            {
                @LeftClick.started -= m_Wrapper.m_KBMActionsCallbackInterface.OnLeftClick;
                @LeftClick.performed -= m_Wrapper.m_KBMActionsCallbackInterface.OnLeftClick;
                @LeftClick.canceled -= m_Wrapper.m_KBMActionsCallbackInterface.OnLeftClick;
                @RightClick.started -= m_Wrapper.m_KBMActionsCallbackInterface.OnRightClick;
                @RightClick.performed -= m_Wrapper.m_KBMActionsCallbackInterface.OnRightClick;
                @RightClick.canceled -= m_Wrapper.m_KBMActionsCallbackInterface.OnRightClick;
                @PointerPosition.started -= m_Wrapper.m_KBMActionsCallbackInterface.OnPointerPosition;
                @PointerPosition.performed -= m_Wrapper.m_KBMActionsCallbackInterface.OnPointerPosition;
                @PointerPosition.canceled -= m_Wrapper.m_KBMActionsCallbackInterface.OnPointerPosition;
                @QAttack.started -= m_Wrapper.m_KBMActionsCallbackInterface.OnQAttack;
                @QAttack.performed -= m_Wrapper.m_KBMActionsCallbackInterface.OnQAttack;
                @QAttack.canceled -= m_Wrapper.m_KBMActionsCallbackInterface.OnQAttack;
                @WAttack.started -= m_Wrapper.m_KBMActionsCallbackInterface.OnWAttack;
                @WAttack.performed -= m_Wrapper.m_KBMActionsCallbackInterface.OnWAttack;
                @WAttack.canceled -= m_Wrapper.m_KBMActionsCallbackInterface.OnWAttack;
                @EAttack.started -= m_Wrapper.m_KBMActionsCallbackInterface.OnEAttack;
                @EAttack.performed -= m_Wrapper.m_KBMActionsCallbackInterface.OnEAttack;
                @EAttack.canceled -= m_Wrapper.m_KBMActionsCallbackInterface.OnEAttack;
                @RAttack.started -= m_Wrapper.m_KBMActionsCallbackInterface.OnRAttack;
                @RAttack.performed -= m_Wrapper.m_KBMActionsCallbackInterface.OnRAttack;
                @RAttack.canceled -= m_Wrapper.m_KBMActionsCallbackInterface.OnRAttack;
                @Pause.started -= m_Wrapper.m_KBMActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_KBMActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_KBMActionsCallbackInterface.OnPause;
            }
            m_Wrapper.m_KBMActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LeftClick.started += instance.OnLeftClick;
                @LeftClick.performed += instance.OnLeftClick;
                @LeftClick.canceled += instance.OnLeftClick;
                @RightClick.started += instance.OnRightClick;
                @RightClick.performed += instance.OnRightClick;
                @RightClick.canceled += instance.OnRightClick;
                @PointerPosition.started += instance.OnPointerPosition;
                @PointerPosition.performed += instance.OnPointerPosition;
                @PointerPosition.canceled += instance.OnPointerPosition;
                @QAttack.started += instance.OnQAttack;
                @QAttack.performed += instance.OnQAttack;
                @QAttack.canceled += instance.OnQAttack;
                @WAttack.started += instance.OnWAttack;
                @WAttack.performed += instance.OnWAttack;
                @WAttack.canceled += instance.OnWAttack;
                @EAttack.started += instance.OnEAttack;
                @EAttack.performed += instance.OnEAttack;
                @EAttack.canceled += instance.OnEAttack;
                @RAttack.started += instance.OnRAttack;
                @RAttack.performed += instance.OnRAttack;
                @RAttack.canceled += instance.OnRAttack;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
            }
        }
    }
    public KBMActions @KBM => new KBMActions(this);
    public interface IKBMActions
    {
        void OnLeftClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnPointerPosition(InputAction.CallbackContext context);
        void OnQAttack(InputAction.CallbackContext context);
        void OnWAttack(InputAction.CallbackContext context);
        void OnEAttack(InputAction.CallbackContext context);
        void OnRAttack(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
}
